<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpOrange</name>
    </assembly>
    <members>
        <member name="M:SharpOrange.Plugin.Load(System.String)">
            <summary>
            Load a plugin by name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SharpOrange.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Create a 2 value Vector
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:SharpOrange.Math.Vector2.negative">
            <summary>
            Gets the reversed direction of the vector.
            </summary>
            <returns>The vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Negate(SharpOrange.Math.Vector2)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.distance(SharpOrange.Math.Vector2)">
            <summary>
            Calculates the distance between another vector.
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Distance(SharpOrange.Math.Vector2,SharpOrange.Math.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Zero">
            <summary>
            Shorthand for writing Vector2(0, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.One">
            <summary>
            Shorthand for writing Vector2(1, 1).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Down">
            <summary>
            Shorthand for writing Vector2(0, -1).
            </summary>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Up">
            <summary>
            Shorthand for writing Vector2(0, 1).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Left">
            <summary>
            Shorthand for writing Vector2(-1, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector2.Right">
            <summary>
            Shorthand for writing Vector2(1, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.RGB.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Create an RGB color object
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:SharpOrange.Math.VehicleHealth.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create a VehicleHealth info object
            </summary>
            <param name="body"></param>
            <param name="engine"></param>
            <param name="tank"></param>
        </member>
        <member name="M:SharpOrange.Math.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Create a 3 value Vector, primarily used for positions and rotations
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:SharpOrange.Math.Vector3.negative">
            <summary>
            Gets the reversed direction of the vector.
            </summary>
            <returns>The vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Negate(SharpOrange.Math.Vector3)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.distance(SharpOrange.Math.Vector3)">
            <summary>
            Calculates the distance between another vector.
            </summary>
            <param name="vector"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Distance(SharpOrange.Math.Vector3,SharpOrange.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Zero">
            <summary>
            Shorthand for writing Vector3(0, 0, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.One">
            <summary>
            Shorthand for writing Vector3(1, 1, 1).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Forward">
            <summary>
            Shorthand for writing Vector3(0, 0, 1).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Back">
            <summary>
            Shorthand for writing Vector3(0, 0, -1).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Down">
            <summary>
            Shorthand for writing Vector3(0, -1, 0).
            </summary>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Up">
            <summary>
            Shorthand for writing Vector3(0, 1, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Left">
            <summary>
            Shorthand for writing Vector3(-1, 0, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Math.Vector3.Right">
            <summary>
            Shorthand for writing Vector3(1, 0, 0).
            </summary>
            <returns></returns>
        </member>
        <member name="E:SharpOrange.Event.OnServerUnload">
            <summary>
            Triggered before the server unloads/stops
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnTick">
            <summary>
            Triggered every server tick
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnServerCommand">
            <summary>
            Triggered when command has been input on server console
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerConnect">
            <summary>
            Triggered when player connects
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerDisconnect">
            <summary>
            Triggered when player disconnects
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerDeath">
            <summary>
            Triggered right before the black screen is supposed to go away
            Basically when a player respawn is requested
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerEnterVehicle">
            <summary>
            Triggered when a player enters a vehicle
            </summary>
            <param name="player"></param>
            <param name="vehicle"></param>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerExitVehicle">
            <summary>
            Triggered when a player exits the vehicle
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnPlayerUpdate">
            <summary>
            Triggered when a player has been updated
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnClientEvent">
            <summary>
            Triggered when a client event is passed
            </summary>
        </member>
        <member name="E:SharpOrange.Event.OnEvent">
            <summary>
            Triggered whenever any other client and server event is passed
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Blip.#ctor(System.String,SharpOrange.Math.Vector3,SharpOrange.Math.RGB,System.Single,System.Int32)">
            <summary>
            Create blip for all player
            </summary>
            <param name="name"></param>
            <param name="position"></param>
            <param name="scale"></param>
            <param name="color"></param>
            <param name="sprite"></param>
        </member>
        <member name="M:SharpOrange.Objects.Blip.#ctor(System.String,SharpOrange.Objects.Player,SharpOrange.Math.Vector3,SharpOrange.Math.RGB,System.Single,System.Int32)">
            <summary>
            Create Blip for specified player
            </summary>
            <param name="name"></param>
            <param name="player"></param>
            <param name="position"></param>
            <param name="color"></param>
            <param name="scale"></param>
            <param name="sprite"></param>
        </member>
        <member name="M:SharpOrange.Objects.Blip.Dispose">
            <summary>
            Dispose the Blip
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:SharpOrange.Objects.Blip.ID" -->
        <member name="P:SharpOrange.Objects.Blip.Name">
            <summary>
            Set name of Blip
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.Color">
            <summary>
            Set color of Blip
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.Sprite">
            <summary>
            Set Blip Sprite
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.Route">
            <summary>
            Set if Blip is routed
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.IsShortRange">
            <summary>
            Set to Short Range Blip
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.Player">
            <summary>
            Attach Blip to player
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Blip.Vehicle">
            <summary>
            Attach Blip to Vehicle
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.HoloText.#ctor(System.String,SharpOrange.Math.Vector3,SharpOrange.Math.RGB,System.Single)">
            <summary>
            Create Holo Text for all players
            </summary>
            <param name="text"></param>
            <param name="position"></param>
            <param name="color"></param>
            <param name="fontSize"></param>
        </member>
        <member name="M:SharpOrange.Objects.HoloText.#ctor(System.String,SharpOrange.Objects.Player,SharpOrange.Math.Vector3,SharpOrange.Math.RGB,SharpOrange.Math.RGB)">
            <summary>
            Create Holo Text for specified player
            </summary>
            <param name="text"></param>
            <param name="player"></param>
            <param name="position"></param>
            <param name="color"></param>
            <param name="outline"></param>
        </member>
        <member name="M:SharpOrange.Objects.HoloText.Dispose">
            <summary>
            Dispose Holo Text
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.HoloText.ID">
            <summary>
            3D Holo Text Unique ID
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.HoloText.AttachToPlayer(SharpOrange.Objects.Player,SharpOrange.Math.Vector3)">
            <summary>
            Attach Holo Text to Player
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.HoloText.AttachToVehicle(SharpOrange.Objects.Vehicle,SharpOrange.Math.Vector3)">
            <summary>
            Attach Holo Text to Vehicle
            </summary>
        </member>
        <member name="T:SharpOrange.Objects.Marker">
            <summary>
            Marker for the normal GTA V Map
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Marker.#ctor(SharpOrange.Math.Vector3,System.Single,System.Single)">
            <summary>
            Create map marker visible for all players
            </summary>
            <param name="position"></param>
            <param name="height"></param>
            <param name="radius"></param>
        </member>
        <member name="M:SharpOrange.Objects.Marker.#ctor(SharpOrange.Objects.Player,SharpOrange.Math.Vector3,System.Single,System.Single)">
            <summary>
            Create map marker visible for the specified
            </summary>
            <param name="player"></param>
            <param name="position"></param>
            <param name="height"></param>
            <param name="radius"></param>
        </member>
        <member name="M:SharpOrange.Objects.Marker.Dispose">
            <summary>
            Proper method for disposing the Marker
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Marker.ID">
            <summary>
            The unique ID of the marker
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.GTAObject.#ctor(System.String,SharpOrange.Math.Vector3,SharpOrange.Math.Vector3)">
            <summary>
            Create GTA Object with object name
            </summary>
            <param name="model"></param>
            <param name="position"></param>
            <param name="rotation"></param>
        </member>
        <member name="M:SharpOrange.Objects.GTAObject.Dispose">
            <summary>
            Dispose the GTA Object
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.GTAObject.ID">
            <summary>
            GUID of object
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Pickup.Create(SharpOrange.Objects.PickupHash,SharpOrange.Math.Vector3,System.Single)">
            <summary>
            Create a pickup
            </summary>
            <param name="pickup"></param>
            <param name="position"></param>
            <param name="scale"></param>
        </member>
        <member name="M:SharpOrange.Objects.Vehicle.#ctor(SharpOrange.Objects.VehicleHash,SharpOrange.Math.Vector3)">
            <summary>
            Creates a new Vehicle
            </summary>
            <param name="vehicle"></param>
            <param name="position"></param>
        </member>
        <member name="M:SharpOrange.Objects.Vehicle.Dispose">
            <summary>
            Proper vehicle disposition, prevents garbage collector to wrongfully dispose it
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.ID">
            <summary>
            Vehicle ID used for unmanaged usage
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Model">
            <summary>
            Model of the vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Position">
            <summary>
            Get/Set Vehicle position
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Rotation">
            <summary>
            Set Pitch, Yaw and Roll
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Locked">
            <summary>
            Get/Set lock state of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Health">
            <summary>
            Get/Set health of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.PrimaryColor">
            <summary>
            Get/Set primary color of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.SecondaryColor">
            <summary>
            Get/Set secondary color of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.BulletproofTires">
            <summary>
            Get/Set bulletproof tires to vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.PlateStyle">
            <summary>
            Get/Set license/number plate style of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Plate">
            <summary>
            Get/Set license/number plate content of vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Sirens">
            <summary>
            Get/Set siren state On/Off (True/False)
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Lights">
            <summary>
            Get/Set vehicle lights state
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Driver">
            <summary>
            Get/Set the vehicle driver
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Vehicle.Passengers">
            <summary>
            Returns passengers in a List of Players
            </summary>
        </member>
        <member name="T:SharpOrange.Objects.VehicleHash">
            <summary>
            Enum for Vehicle hashes
            </summary>
        </member>
        <member name="T:SharpOrange.Objects.WeaponHash">
            <summary>
            Enum for Weapon hashes
            </summary>
        </member>
        <member name="T:SharpOrange.Objects.PickupHash">
            <summary>
            Enum for Pickup Hashes
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.Dispose">
            <summary>
            USE KICK METHOD AND NOT THIS!
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.ID">
            <summary>
            The unique ID of the player for it's current session
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.ClientID">
            <summary>
            The Client GUID
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Name">
            <summary>
            Get/Set the name of the player
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Position">
            <summary>
            Get/Set position of the player
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Rotation">
            <summary>
            Get/Set the Z rotation/heading of the player
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Model">
            <summary>
            Get/Set the model of the player using the Model hash (http://slice.wikidot.com/)
            Use Server.Hash() to get the hash from string name
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.IsAlive">
            <summary>
            If player is alive
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Money">
            <summary>
            Get/Set money of player (check below for alternative methods)
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.DeathPosition">
            <summary>
            Gets the last death position
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.GiveMoney(System.Int64)">
            <summary>
            Add money to what the player currently already has
            </summary>
            <param name="money"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.ResetMoney">
            <summary>
            Totally resets the money of the player
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Health">
            <summary>
            Get/Set the player's health
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Armor">
            <summary>
            Get/Set the player's armor
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.IsInVehicle">
            <summary>
            If player is in a vehicle
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Vehicle">
            <summary>
            Get the vehicle of the player
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.PutInVehicle(SharpOrange.Objects.Vehicle,System.Char)">
            <summary>
            Put player in a vehicle
            </summary>
            <param name="vehicle"></param>
            <param name="seat"></param>
        </member>
        <member name="P:SharpOrange.Objects.Player.IsHUDEnabled">
            <summary>
            If player's HUD is enabled
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.ToggleHUD">
            <summary>
            Toggle the player's HUD
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.Kick">
            <summary>
            Kick the player
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.Kick(System.String)">
            <summary>
            Kick the player with a reason
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.TriggerEvent(System.String,System.Object[])">
            <summary>
            Trigger a client event for the player
            </summary>
            <param name="name"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.SendNotification(System.String)">
            <summary>
            Send a notification to the player
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:SharpOrange.Objects.Player.HasInfoMessage">
            <summary>
            If player has the info message set
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.InfoMessage">
            <summary>
            Set InfoMessage, set to null, string.Empty or "" to Unset
            </summary>
        </member>
        <member name="P:SharpOrange.Objects.Player.Dimension">
            <summary>
            Get/Set the world dimension of player
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.SendMessage(System.String)">
            <summary>
            Send a client message to the player
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.RemoveWeapons">
            <summary>
            Remove all weapons of the player
            </summary>
        </member>
        <member name="M:SharpOrange.Objects.Player.GiveWeapon(SharpOrange.Objects.WeaponHash,System.Int64)">
            <summary>
            Give a weapon to the player
            </summary>
            <param name="weapon"></param>
            <param name="ammo"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.GiveAmmo(SharpOrange.Objects.WeaponHash,System.Int64)">
            <summary>
            Give ammo of a specific weapon to the player
            </summary>
            <param name="weapon"></param>
            <param name="ammo"></param>
        </member>
        <member name="M:SharpOrange.Objects.Player.GetData(System.String)">
            <summary>
            Get synced data of player
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Objects.Player.SetData(System.String,System.Object)">
            <summary>
            Set synced data of player
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:SharpOrange.Resource.Load(System.String)">
            <summary>
            Load a resource by name
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:SharpOrange.Server.Plugins">
            <summary>
            List of the currently loaded Plugins
            </summary>
        </member>
        <member name="P:SharpOrange.Server.Resources">
            <summary>
            List of the currently loaded Resources
            </summary>
        </member>
        <member name="M:SharpOrange.Server.Print(System.String)">
            <summary>
            Print a server message
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:SharpOrange.Server.Shutdown">
            <summary>
            Shut down the server
            </summary>
        </member>
        <member name="M:SharpOrange.Server.Hash(System.String)">
            <summary>
            Text (string) to hash (long)
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Server.TriggerEvent(System.String,System.Object[])">
            <summary>
            Trigger a server event
            </summary>
            <param name="name"></param>
            <param name="args"></param>
        </member>
        <member name="P:SharpOrange.Server.Players">
            <summary>
            Dictionary/Map of the currently connected Players
            </summary>
        </member>
        <member name="M:SharpOrange.Server.TriggerEvent(System.Int64,System.String,System.Object[])">
            <summary>
            Trigger Client event
            </summary>
            <param name="playerid"></param>
            <param name="name"></param>
            <param name="args"></param>
        </member>
        <member name="M:SharpOrange.Server.TriggerEventForAll(System.String,System.Object[])">
            <summary>
            Triggers a client event for all players
            </summary>
            <param name="name"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:SharpOrange.Server.SendMessageToAll(System.String)">
            <summary>
            Broadcast client message to all players
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:SharpOrange.Server.Vehicles">
            <summary>
            Dictionary/Map of Vehicles
            </summary>
        </member>
        <member name="P:SharpOrange.Server.GTAObjects">
            <summary>
            Dictionary of holo texts
            </summary>
        </member>
        <member name="P:SharpOrange.Server.HoloTexts">
            <summary>
            Dictionary of holo texts
            </summary>
        </member>
        <member name="P:SharpOrange.Server.Blips">
            <summary>
            Dictionary of Blips
            </summary>
        </member>
        <member name="P:SharpOrange.Server.Markers">
            <summary>
            Dictionary/Map of markers for the GTA V map
            </summary>
        </member>
    </members>
</doc>
